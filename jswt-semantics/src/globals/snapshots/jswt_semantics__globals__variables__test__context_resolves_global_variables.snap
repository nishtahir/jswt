---
source: jswt-semantics/src/globals/variables.rs
expression: resolver
---
GlobalSemanticResolver {
    environment: SemanticEnvironment {
        bindings: SemanticBindingsTable {
            bindings: {},
        },
        symbols: ScopedSymbolTable {
            scopes: [
                Span {
                    file: "program",
                    module: "root",
                    start: 0,
                    end: 0,
                },
            ],
            files: [],
            table: {
                Span {
                    file: "program",
                    module: "root",
                    start: 0,
                    end: 0,
                }: Scope {
                    symbols: {
                        "PI": Variable(
                            Variable {
                                declaration: Span {
                                    file: "test_context_resolves_global_variables",
                                    module: "module/test_context_resolves_global_variables",
                                    start: 9,
                                    end: 25,
                                },
                                initialization: None,
                                name: "PI",
                                ty: Unknown,
                                is_mutable: false,
                            },
                        ),
                        "test": Function(
                            Function {
                                name: "test",
                                params: [
                                    Parameter {
                                        name: "a",
                                        ty: Binding(
                                            "i32",
                                        ),
                                    },
                                    Parameter {
                                        name: "b",
                                        ty: Binding(
                                            "i32",
                                        ),
                                    },
                                ],
                                ret: Binding(
                                    "void",
                                ),
                            },
                        ),
                    },
                    ret: None,
                },
            },
        },
        types: TypeMap {
            types: {},
        },
    },
    errors: [],
}
