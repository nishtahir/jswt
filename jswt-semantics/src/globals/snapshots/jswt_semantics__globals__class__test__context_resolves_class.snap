---
source: jswt-semantics/src/globals/class.rs
expression: resolver
---
GlobalSemanticResolver {
    environment: SemanticEnvironment {
        bindings: SemanticBindingsTable {
            bindings: {
                "Foo": ClassBinding {
                    name: "Foo",
                    constructors: [],
                    fields: [
                        Field {
                            name: "bar",
                            index: 0,
                            size: 4,
                            ty: Binding(
                                "i32",
                            ),
                        },
                    ],
                    methods: [
                        Method {
                            name: "baz",
                            params: [
                                Parameter {
                                    name: "a",
                                    ty: Binding(
                                        "i32",
                                    ),
                                },
                            ],
                            ret: Binding(
                                "i32",
                            ),
                        },
                        Method {
                            name: "empty",
                            params: [],
                            ret: Binding(
                                "void",
                            ),
                        },
                    ],
                },
            },
        },
        symbols: ScopedSymbolTable {
            scopes: [
                Span {
                    file: "program",
                    module: "root",
                    start: 0,
                    end: 0,
                },
            ],
            files: [],
            table: {
                Span {
                    file: "program",
                    module: "root",
                    start: 0,
                    end: 0,
                }: Scope {
                    symbols: {
                        "Foo": Class,
                    },
                    ret: None,
                },
            },
        },
        types: TypeMap {
            types: {},
        },
    },
    errors: [],
}
